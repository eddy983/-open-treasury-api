{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "WebsiteLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/open-treasury-api-v1-website"
      }
    },
    "ArtisanLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/open-treasury-api-v1-artisan"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "v1",
                  "open-treasury-api",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/open-treasury-api-v1*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/open-treasury-api-v1*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": "s3:*",
                  "Resource": [
                    {
                      "Fn::GetAtt": "Assets.Arn"
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": "Assets.Arn"
                          },
                          "/*"
                        ]
                      ]
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": "ses:*",
                  "Resource": "*"
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "open-treasury-api",
              "v1",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "WebsiteLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/open-treasury-api/v1/1594646927686-2020-07-13T13:28:47.686Z/open-treasury-api.zip"
        },
        "FunctionName": "open-treasury-api-v1-website",
        "Handler": "public/index.php",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "provided",
        "Timeout": 28,
        "Environment": {
          "Variables": {
            "APP_KEY": "base64:BznrfbBA+wNXlVDlLnmMGIKXALX3H/uhPu/0nh1PjiQ=",
            "APP_DEBUG": "false",
            "JWT_SECRET": "9gEdta11ITeum3WoQkzs6dEhbAmGYmFT23jBIUtsM1DMGH4fd7iDMCyhXhnZgxY1",
            "APP_NAME": "BudgIT",
            "LOG_CHANNEL": "stderr",
            "SESSION_DRIVER": "cookie",
            "VIEW_COMPILED_PATH": "/tmp/storage/framework/views",
            "DB_CONNECTION": "mysql",
            "FILESYSTEM_DRIVER": "s3",
            "CACHE_DRIVER": "database",
            "QUEUE_CONNECTION": "database",
            "DB_PORT": "3306",
            "DB_HOST": "openalliance-database.cinnf4t0zkrt.eu-west-2.rds.amazonaws.com",
            "DB_DATABASE": "personalised_platform",
            "DB_USERNAME": "openstates_user",
            "DB_PASSWORD": "Budgit@_2019",
            "MIX_ASSET_URL": "https://personalised-platform-assets.s3.eu-west-2.amazonaws.com",
            "MAIL_MAILER": "smtp",
            "MAIL_HOST": "email-smtp.eu-west-2.amazonaws.com",
            "MAIL_PORT": "587",
            "MAIL_USERNAME": "AKIASJEPKQTEPIYK76XG",
            "MAIL_PASSWORD": "BPfg1fNd2M9McMP/ZJjhJr6PXqlciXvq8Bvx9XR181rC",
            "MAIL_ENCRYPTION": "tls",
            "MAIL_FROM_ADDRESS": "gbenga@yourbudgit.com",
            "MAIL_FROM_NAME": "BudgIT",
            "AWS_BUCKET": {
              "Ref": "Assets"
            }
          }
        },
        "Layers": [
          "arn:aws:lambda:eu-west-2:209497400698:layer:php-73-fpm:25"
        ]
      },
      "DependsOn": [
        "WebsiteLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "WebsiteLambdaVersionhxuYazdujoNGg6i9VzB0VkGRXl3V8qLR6Muaze8wt8": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "WebsiteLambdaFunction"
        },
        "CodeSha256": "mP2IkkNnzriyq57TZ40I1bUZjkl9YIgLVIaWF5EPlLQ="
      }
    },
    "ArtisanLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/open-treasury-api/v1/1594646927686-2020-07-13T13:28:47.686Z/open-treasury-api.zip"
        },
        "FunctionName": "open-treasury-api-v1-artisan",
        "Handler": "artisan",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "provided",
        "Timeout": 120,
        "Environment": {
          "Variables": {
            "APP_KEY": "base64:BznrfbBA+wNXlVDlLnmMGIKXALX3H/uhPu/0nh1PjiQ=",
            "APP_DEBUG": "false",
            "JWT_SECRET": "9gEdta11ITeum3WoQkzs6dEhbAmGYmFT23jBIUtsM1DMGH4fd7iDMCyhXhnZgxY1",
            "APP_NAME": "BudgIT",
            "LOG_CHANNEL": "stderr",
            "SESSION_DRIVER": "cookie",
            "VIEW_COMPILED_PATH": "/tmp/storage/framework/views",
            "DB_CONNECTION": "mysql",
            "FILESYSTEM_DRIVER": "s3",
            "CACHE_DRIVER": "database",
            "QUEUE_CONNECTION": "database",
            "DB_PORT": "3306",
            "DB_HOST": "openalliance-database.cinnf4t0zkrt.eu-west-2.rds.amazonaws.com",
            "DB_DATABASE": "personalised_platform",
            "DB_USERNAME": "openstates_user",
            "DB_PASSWORD": "Budgit@_2019",
            "MIX_ASSET_URL": "https://personalised-platform-assets.s3.eu-west-2.amazonaws.com",
            "MAIL_MAILER": "smtp",
            "MAIL_HOST": "email-smtp.eu-west-2.amazonaws.com",
            "MAIL_PORT": "587",
            "MAIL_USERNAME": "AKIASJEPKQTEPIYK76XG",
            "MAIL_PASSWORD": "BPfg1fNd2M9McMP/ZJjhJr6PXqlciXvq8Bvx9XR181rC",
            "MAIL_ENCRYPTION": "tls",
            "MAIL_FROM_ADDRESS": "gbenga@yourbudgit.com",
            "MAIL_FROM_NAME": "BudgIT",
            "AWS_BUCKET": {
              "Ref": "Assets"
            }
          }
        },
        "Layers": [
          "arn:aws:lambda:eu-west-2:209497400698:layer:php-73:25",
          "arn:aws:lambda:eu-west-2:209497400698:layer:console:25"
        ]
      },
      "DependsOn": [
        "ArtisanLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "ArtisanLambdaVersionSuKGD7ouNa47TLZX9PqZtKWhh3JUouz0EJsft52so2g": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ArtisanLambdaFunction"
        },
        "CodeSha256": "mP2IkkNnzriyq57TZ40I1bUZjkl9YIgLVIaWF5EPlLQ="
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "v1-open-treasury-api",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        }
      }
    },
    "ApiGatewayResourceProxyVar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "{proxy+}",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodAny": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "RequestParameters": {},
        "ResourceId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "WebsiteLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      }
    },
    "ApiGatewayMethodProxyVarAny": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceProxyVar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "WebsiteLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      }
    },
    "ApiGatewayDeployment1594646914970": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "v1"
      },
      "DependsOn": [
        "ApiGatewayMethodAny",
        "ApiGatewayMethodProxyVarAny"
      ]
    },
    "WebsiteLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "WebsiteLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "ApiGatewayLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/api-gateway/open-treasury-api-v1"
      }
    },
    "CustomApiGatewayAccountCloudWatchRole": {
      "Type": "Custom::ApiGatewayAccountRole",
      "Version": 1,
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomDashresourceDashapigwDashcwDashroleLambdaFunction",
            "Arn"
          ]
        }
      }
    },
    "IamRoleCustomResourcesLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "v1",
                  "open-treasury-api",
                  "custom-resources-lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      ":",
                      [
                        "arn",
                        {
                          "Ref": "AWS::Partition"
                        },
                        "iam:",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        "role/*"
                      ]
                    ]
                  },
                  "Action": [
                    "iam:AttachRolePolicy",
                    "iam:CreateRole",
                    "iam:ListAttachedRolePolicies",
                    "iam:PassRole"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      ":",
                      [
                        "arn",
                        {
                          "Ref": "AWS::Partition"
                        },
                        "apigateway:*::/account"
                      ]
                    ]
                  },
                  "Action": [
                    "apigateway:GET",
                    "apigateway:PATCH"
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "CustomDashresourceDashapigwDashcwDashroleLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/open-treasury-api/v1/1594646927686-2020-07-13T13:28:47.686Z/custom-resources.zip"
        },
        "FunctionName": "open-treasury-api-v1-custom-resource-apigw-cw-role",
        "Handler": "apiGatewayCloudWatchRole/handler.handler",
        "MemorySize": 1024,
        "Runtime": "nodejs12.x",
        "Timeout": 180,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleCustomResourcesLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "IamRoleCustomResourcesLambdaExecution"
      ]
    },
    "Assets": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "open-treasury-assets",
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedHeaders": [
                "*"
              ],
              "AllowedMethods": [
                "GET"
              ],
              "AllowedOrigins": [
                "*"
              ]
            }
          ]
        }
      }
    },
    "AssetsBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "Assets"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": "*",
              "Action": "s3:GetObject",
              "Resource": {
                "Fn::Join": [
                  "/",
                  [
                    {
                      "Fn::GetAtt": [
                        "Assets",
                        "Arn"
                      ]
                    },
                    "*"
                  ]
                ]
              }
            }
          ]
        }
      }
    },
    "WebsiteCDN": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "Enabled": true,
          "PriceClass": "PriceClass_100",
          "HttpVersion": "http2",
          "Origins": [
            {
              "Id": "Website",
              "DomainName": {
                "Fn::Join": [
                  ".",
                  [
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "execute-api",
                    {
                      "Ref": "AWS::Region"
                    },
                    "amazonaws.com"
                  ]
                ]
              },
              "OriginPath": "/v1",
              "CustomOriginConfig": {
                "OriginProtocolPolicy": "https-only"
              }
            },
            {
              "Id": "Assets",
              "DomainName": {
                "Fn::GetAtt": [
                  "Assets",
                  "RegionalDomainName"
                ]
              },
              "S3OriginConfig": {}
            }
          ],
          "DefaultCacheBehavior": {
            "AllowedMethods": [
              "GET",
              "HEAD",
              "OPTIONS",
              "PUT",
              "POST",
              "PATCH",
              "DELETE"
            ],
            "TargetOriginId": "Website",
            "DefaultTTL": 0,
            "MinTTL": 0,
            "MaxTTL": 0,
            "ForwardedValues": {
              "QueryString": true,
              "Cookies": {
                "Forward": "all"
              },
              "Headers": [
                "Accept",
                "Accept-Language",
                "Origin",
                "Referer"
              ]
            },
            "ViewerProtocolPolicy": "redirect-to-https"
          },
          "CacheBehaviors": [
            {
              "PathPattern": "assets/*",
              "TargetOriginId": "Assets",
              "AllowedMethods": [
                "GET",
                "HEAD"
              ],
              "ForwardedValues": {
                "QueryString": "false",
                "Cookies": {
                  "Forward": "none"
                }
              },
              "ViewerProtocolPolicy": "redirect-to-https",
              "Compress": true
            }
          ],
          "CustomErrorResponses": [
            {
              "ErrorCode": 500,
              "ErrorCachingMinTTL": 0
            },
            {
              "ErrorCode": 504,
              "ErrorCachingMinTTL": 0
            }
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      }
    },
    "WebsiteLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "WebsiteLambdaVersionhxuYazdujoNGg6i9VzB0VkGRXl3V8qLR6Muaze8wt8"
      }
    },
    "ArtisanLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ArtisanLambdaVersionSuKGD7ouNa47TLZX9PqZtKWhh3JUouz0EJsft52so2g"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/v1"
          ]
        ]
      }
    }
  }
}